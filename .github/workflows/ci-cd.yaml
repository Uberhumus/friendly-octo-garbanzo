name: CI/CD Pipeline

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }} 
  CURRENT_RUN: ${{ github.run_number }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        if [ -f tests/requirements.txt ]; then pip install -r tests/requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        mv tests/test_main.py code/test_main.py
        cd code
        mkdir ~/.aws
        echo -e "[default]\naws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}\naws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" > ~/.aws/credentials
        echo -e "[default]\nregion = eu-west-1" > ~/.aws/config
        pytest


  docker_build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

#     - name: Set current_time variable
#       id: set_time
#       run: |
#         current_time=$(date +%s)
#         echo "current_time=$current_time" >> $GITHUB_ENV
# 
    - name: Build Docker image
      run: |
        docker build . --file Dockerfile --tag home-assignment-yotam:${{ github.run_number }}-${{ github.head_ref || github.ref_name }}

    - name: Push to Amazon ECR
      uses: jwalton/gh-ecr-push@2a95936d54846ab1322b2aa1c3e3ebba78032c64
      with:
        access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
        secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        image: home-assignment-yotam:${{ github.run_number }}-${{ github.head_ref || github.ref_name }}
        local-image: home-assignment-yotam:${{ github.run_number }}-${{ github.head_ref || github.ref_name }}
        region: eu-west-1


  deploy:
    runs-on: ubuntu-latest
    needs: docker_build
    if: github.ref == 'refs/heads/main'

    steps: 
    - name: Deploy Helm chart
      uses: bitovi/github-actions-deploy-eks-helm@17fcd3c5f699b979d63d15ab0900ad0ed3edb238
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1
        cluster-name: home-assignment-yotam
        namespace: default
        chart-path: helm-chart/
        name: home-assignment-yotam